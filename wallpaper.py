#!/usr/bin/env python

from pprint import pprint

import conf

#find wallpapers
import glob
papers = []
for path in conf.paths:
    for form in conf.formats:
        papers += glob.glob(path+'/*.'+form)
#pprint(papers)

import os
contexts = {}
for paper in papers:
    names = os.path.split(paper)
    dpath = names[0]
    dname = os.path.split(names[0])[1]
    pname = os.path.splitext(names[1])[0]
    if not dpath in contexts:
        contexts[dpath] = {'name':dname,'papers':[]}
    contexts[dpath]['papers'].append({'name':pname,'paper':paper}) 
#pprint(contexts)

#generate confs
import time

cur_time = time.strftime('%Y-%m-%d %H:%M:%S');
logo = 'Generated by WallPaper @ '+cur_time;

wallpapers = {'wallpapers':[logo]}
context_template = {'background':[logo,{'starttime':{'year':'2009','month':'08','day':'04','hour':'00','minute':'00','second':'00'}}]}

from dict_to_xml import Dict_To_XML

dx = Dict_To_XML()

print('contexts:')

for dpath in contexts:
    #generate context
    context = context_template.copy()
    papers = contexts[dpath]['papers']
    
    i = 0
    while i < len(papers):
        static = {'static':{'duration':1795,'file':papers[i]['paper']}}
        transition = {'transition':{'duration':conf.duration,'from':papers[i-1]['paper'],'to':papers[i]['paper']}}
        context['background'].append(static)
        context['background'].append(transition)
        
        #generate wallpaper
        if conf.static:
            wallpaper = {'wallpaper':{'name':papers[i]['name'],'filename':papers[i]['paper'],'options':'zoom','pcolor':'#000000','scolor':'#000000','shade_type':'solid'}}
            wallpapers['wallpapers'].append(wallpaper)
            
        i += 1

    #print(dx.dict_to_xml(context));quit()
    filename = dpath+'/'+contexts[dpath]['name']+'.xml'
    f = open(filename,'w')
    f.write(dx.dict_to_xml(context))
    f.close()
    
    print(filename)
    
    #generate wallpaper
    if conf.transition:
        wallpaper = {'wallpaper deleted=false':{'name':contexts[dpath]['name'],'filename':filename,'options':'zoom'}}
        wallpapers['wallpapers'].append(wallpaper)

print('entrance:')

dx.doctype = conf.doctype
#print(dx.dict_to_xml(wallpapers));quit()
f = open(conf.entrance,'w')
f.write(dx.dict_to_xml(wallpapers))
f.close()

print(conf.entrance)